{
  "name": "gitworkspace",
  "displayName": "Git Workspace",
  "description": "A convenient Git-based file explorer that displays (1) currently changed files, and (2) ALL files ever modified by the current branch (since its creation!) for one or more Git repositories.",
  "publisher": "daveWasTaken",
  "version": "1.2.0",
  "keywords": [
    "git",
    "workspace",
    "branch",
    "file",
    "explorer"
  ],
  "license": "SEE LICENSE IN LICENSE.txt",
  "icon": "resources/folder-git.png",
  "homepage": "https://github.com/DaveWasTakn/GitWorkspace",
  "repository": {
    "type": "git",
    "url": "https://github.com/DaveWasTakn/GitWorkspace"
  },
  "sponsor": {
    "url": "https://buymeacoffee.com/davewastakn"
  },
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "SCM Providers",
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gitWorkspace_container_files.reset",
        "title": "Reset Cached Repository Information"
      },
      {
        "command": "gitWorkspace_container_files.refreshEntry",
        "title": "Refresh",
        "icon": {
          "light": "resources/refresh.png",
          "dark": "resources/refresh_white.png"
        }
      },
      {
        "command": "gitWorkspace.onClickTreeItem",
        "title": "open"
      },
      {
        "command": "gitWorkspace_container_files.quickAction",
        "title": "quickAction",
        "icon": "$(symbol-event)"
      },
      {
        "command": "gitWorkspace_container_files.diffHead",
        "title": "current diff"
      },
      {
        "command": "gitWorkspace_container_files.diffBranch",
        "title": "branch diff"
      },
      {
        "command": "gitWorkspace_container_files.rename",
        "title": "rename"
      },
      {
        "command": "gitWorkspace_container_files.rollback",
        "title": "rollback"
      },
      {
        "command": "gitWorkspace_container_files.delete",
        "title": "delete"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "gitWorkspace_container",
          "title": "gitWorkspace",
          "icon": "resources/workspace.png"
        }
      ]
    },
    "views": {
      "gitWorkspace_container": [
        {
          "id": "gitWorkspace_container_files",
          "name": "files"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "gitWorkspace_container_files.refreshEntry",
          "when": "view == gitWorkspace_container_files",
          "group": "navigation"
        },
        {
          "command": "gitWorkspace_container_files.reset",
          "when": "view == gitWorkspace_container_files"
        }
      ],
      "view/item/context": [
        {
          "command": "gitWorkspace_container_files.quickAction",
          "when": "view == gitWorkspace_container_files && viewItem == FILE",
          "group": "inline"
        },
        {
          "command": "gitWorkspace_container_files.diffHead",
          "when": "view == gitWorkspace_container_files && viewItem == FILE",
          "group": "1@1"
        },
        {
          "command": "gitWorkspace_container_files.diffBranch",
          "when": "view == gitWorkspace_container_files && viewItem == FILE",
          "group": "1@2"
        },
        {
          "command": "gitWorkspace_container_files.rename",
          "when": "view == gitWorkspace_container_files && viewItem == FILE",
          "group": "2@1"
        },
        {
          "command": "gitWorkspace_container_files.rollback",
          "when": "view == gitWorkspace_container_files && viewItem == FILE",
          "group": "2@2"
        },
        {
          "command": "gitWorkspace_container_files.delete",
          "when": "view == gitWorkspace_container_files && viewItem == FILE",
          "group": "2@3"
        }
      ]
    },
    "configuration": {
      "title": "Git Workspace",
      "properties": {
        "gitWorkspace.path_to_repository": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The paths to the desired git repositories.\n\nPlease provide absolute paths using the correct format for your operating system: For Windows paths should start with a drive letter like 'C:' and can use either backslashes ('\\') or forward slashes ('/'). On Unix-like systems (Linux, macOS and WSL), use forward slashes ('/').",
          "markdownDescription": "**The paths to the desired git repositories.**\n\n_Please provide absolute paths using the correct format for your operating system: For Windows paths should start with a drive letter like `C:` and can use either backslashes (`\\`) or forward slashes (`/`). On Unix-like systems (Linux, macOS and WSL), use forward slashes (`/`)._",
          "order": 0
        },
        "gitWorkspace.path_to_git_executable": {
          "type": "string",
          "description": "OPTIONAL: Path to a specific git executable. If none is provided, the extension will try to use the one found in your PATH.\n\nPlease provide absolute paths using the correct format for your operating system: For Windows paths should start with a drive letter like 'C:' and can use either backslashes ('\\') or forward slashes ('/'). On Unix-like systems (Linux, macOS and WSL), use forward slashes ('/').",
          "markdownDescription": "**_OPTIONAL_**: **Path to a specific git executable.** If none is provided, the extension will try to use the one found in your PATH.\n\n_Please provide an absolute path using the correct format for your operating system: For Windows paths should start with a drive letter like `C:` and can use either backslashes (`\\`) or forward slashes (`/`). On Unix-like systems (Linux, macOS and WSL), use forward slashes (`/`)._",
          "order": 1
        },
        "gitWorkspace.useFileWatchers": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic view updates when files in the specified repositories are created, changed, or deleted.",
          "markdownDescription": "Enable automatic view updates when files in the specified repositories are created, changed, or deleted.",
          "order": 2
        },
        "gitWorkspace.customWorkflows": {
          "type": "object",
          "default": {
            "commit with branchname and push": [
              "git add --all",
              "git commit -m \"<<<$REPOSITORY_BRANCH_WITHOUT_PREFIX>>>\"",
              "git push"
            ]
          },
          "description": "Custom workflows that can be triggered by clicking on a repository in the extension's explorer.\n\nA workflow is a sequence of commands defined in settings.json, each with a name and a list of commands. Use placeholders like <<<PLACEHOLDER NAME>>> to prompt for user input at runtime. \n\nExample 'commit' workflow: Stages all changes and commits them, prompting for the commit message: \"commit\": [ \"git add --all\", \"git commit -m '<<<commit message>>>'\" ]\n\nSpecial placeholders are replaced automatically: <<<$REPOSITORY_NAME>>>, <<<$REPOSITORY_BRANCH>>>, <<<$REPOSITORY_BRANCH_WITHOUT_PREFIX>>>, <<<$REPOSITORY_PATH>>>. The spawned terminal will use your preferred shell type set in the `terminal.integrated.defaultProfile` vscode settings, however, instead of PowerShell, the normal Command Prompt will be used on windows if the `useChainingForWorkflows` is enabled.",
          "markdownDescription": "**Custom workflows that can be triggered by clicking on a repository in the extension's explorer.**\n\nA workflow is a sequence of commands defined in `settings.json`, each with a name and a list of commands.\n\nUse placeholders like `<<<PLACEHOLDER NAME>>>` to prompt for user input at runtime.\n\n**Example 'commit' workflow:**\nStages all changes and commits them, prompting for the commit message:\n```json\n\"commit\": [\n  \"git add --all\",\n  \"git commit -m \\\"<<<commit message>>>\\\"\"\n]\n```\n\n_Special placeholders are replaced automatically:_ `<<<$REPOSITORY_NAME>>>`, `<<<$REPOSITORY_BRANCH>>>`, `<<<$REPOSITORY_BRANCH_WITHOUT_PREFIX>>>`, `<<<$REPOSITORY_PATH>>>`.\n\n_The spawned terminal will use your preferred shell type set in the `terminal.integrated.defaultProfile` vscode settings, however, instead of PowerShell, the normal Command Prompt will be used on windows if the `useChainingForWorkflows` is enabled._",
          "order": 3
        },
        "gitWorkspace.useChainingForWorkflows": {
          "type": "boolean",
          "default": true,
          "description": "Use && to chain commands in workflows. This is recommended, as it stops execution if a command fails.\n\nDisabling this will run commands one by one without checking for errors (due to a VSCode API limitation).\n\nEven if your default shell is PowerShell, commands will run in Command Prompt when chaining is enabled (since && isn't supported in all PowerShell versions).\n\nTo change your default shell, search for terminal.integrated.defaultProfile in settings (e.g., terminal.integrated.defaultProfile.windows on Windows).",
          "markdownDescription": "Use `&&` to chain commands in workflows. This is recommended, as it stops execution if a command fails.\n\nDisabling this will run commands one by one without checking for errors (due to a VSCode API limitation).\n\nEven if your default shell is PowerShell, commands will run in Command Prompt when chaining is enabled (since `&&` isn't supported in all PowerShell versions).\n\nTo change your default shell, search for `terminal.integrated.defaultProfile` in settings (e.g., `terminal.integrated.defaultProfile.windows` on Windows).",
          "order": 4
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
  }
}
